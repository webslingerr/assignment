definitions:
  handler.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: integer
    type: object
  models.BrandPrimaryKey:
    properties:
      brand_id:
        type: integer
    type: object
  models.CategoryPrimaryKey:
    properties:
      category_id:
        type: integer
    type: object
  models.CreateBrand:
    properties:
      brand_name:
        type: string
    type: object
  models.CreateCategory:
    properties:
      category_name:
        type: string
    type: object
  models.CreateCustomer:
    properties:
      city:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      zip_code:
        type: number
    type: object
  models.CreateOrder:
    properties:
      customer_id:
        type: integer
      order_status:
        type: integer
      required_date:
        type: string
      shipped_date:
        type: string
      staff_id:
        type: integer
      store_id:
        type: integer
    type: object
  models.CreateOrderItem:
    properties:
      discount:
        type: number
      list_price:
        type: number
      order_id:
        type: integer
      product_id:
        description: ItemId      int     `json:"item_id"`
        type: integer
      quantity:
        description: ProductData *Product `json:"product_data"`
        type: integer
    type: object
  models.CreateProduct:
    properties:
      brand_id:
        type: integer
      category_id:
        type: integer
      list_price:
        type: number
      model_year:
        type: integer
      product_name:
        type: string
    type: object
  models.CreatePromocode:
    properties:
      discount:
        type: number
      discount_type:
        type: integer
      order_limit_price:
        type: number
      promocode_name:
        type: string
    type: object
  models.CreateStaff:
    properties:
      active:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      manager_id:
        type: integer
      phone:
        type: string
      store_id:
        type: integer
    type: object
  models.CreateStock:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
      store_id:
        type: integer
    type: object
  models.CreateStore:
    properties:
      city:
        type: string
      email:
        type: string
      phone:
        type: string
      state:
        type: string
      store_name:
        type: string
      street:
        type: string
      zip_code:
        type: string
    type: object
  models.CreateUser:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.CustomerPrimaryKey:
    properties:
      customer_id:
        type: integer
    type: object
  models.OrderItemPrimaryKey:
    properties:
      item_id:
        type: integer
      order_id:
        type: integer
    type: object
  models.OrderPrimaryKey:
    properties:
      order_id:
        type: integer
    type: object
  models.ProductPrimaryKey:
    properties:
      product_id:
        type: integer
    type: object
  models.PromocodePrimaryKey:
    properties:
      promocode_id:
        type: integer
    type: object
  models.SendProduct:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
      receiver_id:
        type: integer
      sender_id:
        type: integer
    type: object
  models.StaffPrimaryKey:
    properties:
      staff_id:
        type: integer
    type: object
  models.StockPrimaryKey:
    properties:
      product_id:
        type: integer
      store_id:
        type: integer
    type: object
  models.StorePrimaryKey:
    properties:
      store_id:
        type: integer
    type: object
  models.UpdateBrand:
    properties:
      brand_id:
        type: integer
      brand_name:
        type: string
    type: object
  models.UpdateCategory:
    properties:
      category_id:
        type: integer
      category_name:
        type: string
    type: object
  models.UpdateCustomer:
    properties:
      city:
        type: string
      customer_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      zip_code:
        type: number
    type: object
  models.UpdateOrder:
    properties:
      customer_id:
        type: integer
      order_id:
        type: integer
      order_status:
        type: integer
      required_date:
        type: string
      shipped_date:
        type: string
      staff_id:
        type: integer
      store_id:
        type: integer
    type: object
  models.UpdateProduct:
    properties:
      brand_id:
        type: integer
      category_id:
        type: integer
      list_price:
        type: number
      model_year:
        type: integer
      product_id:
        type: integer
      product_name:
        type: string
    type: object
  models.UpdateStaff:
    properties:
      active:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      manager_id:
        type: integer
      phone:
        type: string
      staff_id:
        type: integer
      store_id:
        type: integer
    type: object
  models.UpdateStock:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
      store_id:
        type: integer
    type: object
  models.UpdateStore:
    properties:
      city:
        type: string
      email:
        type: string
      phone:
        type: string
      state:
        type: string
      store_id:
        type: integer
      store_name:
        type: string
      street:
        type: string
      zip_code:
        type: string
    type: object
info:
  contact: {}
paths:
  /brand:
    get:
      consumes:
      - application/json
      description: Get List Brand
      operationId: get_list_brand
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Brand
      tags:
      - Brand
    post:
      consumes:
      - application/json
      description: Create Brand
      operationId: create_brand
      parameters:
      - description: CreateBrandRequest
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.CreateBrand'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Brand
      tags:
      - Brand
  /brand/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Brand
      operationId: delete_brand
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteBrandRequest
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandPrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Brand
      tags:
      - Brand
    get:
      consumes:
      - application/json
      description: Get By ID Brand
      operationId: get_by_id_brand
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request"Order
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Brand
      tags:
      - Brand
    put:
      consumes:
      - application/json
      description: Update Brand
      operationId: update_brand
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateBrandRequest
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBrand'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Brand
      tags:
      - Brand
  /category:
    get:
      consumes:
      - application/json
      description: Get List Category
      operationId: get_list_category
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create Category
      operationId: create_category
      parameters:
      - description: CreateCategoryRequest
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Category
      operationId: delete_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteCategoryRequest
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryPrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Get By ID Category
      operationId: get_by_id_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update Category
      operationId: update_category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCategoryRequest
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Category
      tags:
      - Category
  /customer:
    get:
      consumes:
      - application/json
      description: Get List Customer
      operationId: get_list_customer
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Customer
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create Customer
      operationId: create_customer
      parameters:
      - description: CreateCustomerRequest
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.CreateCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Customer
      tags:
      - Customer
  /customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Customer
      operationId: delete_customer
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteCustomerRequest
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerPrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Customer
      tags:
      - Customer
    get:
      consumes:
      - application/json
      description: Get By ID Customer
      operationId: get_by_id_customer
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Customer
      tags:
      - Customer
    put:
      consumes:
      - application/json
      description: Update Customer
      operationId: update_customer
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateCustomerRequest
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Customer
      tags:
      - Customer
  /order:
    get:
      consumes:
      - application/json
      description: Get List Order
      operationId: get_list_order
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create Order
      operationId: create_order
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: CreateOrderRequest
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Order
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order
      operationId: delete_order
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteOrderRequest
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.OrderPrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get By ID Order
      operationId: get_by_id_order
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      operationId: update_order
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateOrderRequest
        in: body
        name: Order
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Order
      tags:
      - Order
  /order_item:
    post:
      consumes:
      - application/json
      description: Create Order Item
      operationId: create_order_item
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: CreateOrderItemRequest
        in: body
        name: order_item
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderItem'
      produces:
      - application/json
      responses:
        "201":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Order Item
      tags:
      - Order
  /order_item/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Order Item
      operationId: delete_order_item
      parameters:
      - description: Password
        in: header
        name: Password
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: item_id
        in: query
        name: item_id
        required: true
        type: string
      - description: DeleteOrderItemRequest
        in: body
        name: orderItem
        required: true
        schema:
          $ref: '#/definitions/models.OrderItemPrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Order Item
      tags:
      - Order
  /product:
    get:
      consumes:
      - application/json
      description: Get List Product
      operationId: get_list_product
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      operationId: create_product
      parameters:
      - description: CreateProductRequest
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Product
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      operationId: delete_product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteProductRequest
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductPrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get By ID Product
      operationId: get_by_id_product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update Product
      operationId: update_product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateProductRequest
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Product
      tags:
      - Product
  /promocode:
    get:
      consumes:
      - application/json
      description: Get List Promocode
      operationId: get_list_promocode
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Promocode
      tags:
      - Promocode
    post:
      consumes:
      - application/json
      description: Create Promocode
      operationId: create_promocode
      parameters:
      - description: CreatePromocodeRequest
        in: body
        name: Promocode
        required: true
        schema:
          $ref: '#/definitions/models.CreatePromocode'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Promocode
      tags:
      - Promocode
  /promocode/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Promocode
      operationId: delete_promocode
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeletePromocodeRequest
        in: body
        name: Promocode
        required: true
        schema:
          $ref: '#/definitions/models.PromocodePrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Promocode
      tags:
      - Promocode
    get:
      consumes:
      - application/json
      description: Get By ID Promocode
      operationId: get_by_id_promocode
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Promocode
      tags:
      - Promocode
  /register:
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_User
      parameters:
      - description: CreateUserRequest
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
  /report/send_product:
    put:
      consumes:
      - application/json
      description: Send Product To Another Store
      operationId: send_product
      parameters:
      - description: SendProductRequest
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/models.SendProduct'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Send Product
      tags:
      - Report
  /report/staff_report:
    get:
      consumes:
      - application/json
      description: Get List Staff Report
      operationId: get_list_staff_report
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Staff Report
      tags:
      - Report
  /report/total_sum:
    get:
      consumes:
      - application/json
      description: Total Sum Order
      operationId: total_sum_order
      parameters:
      - description: order_id
        in: query
        name: order_id
        required: true
        type: string
      - description: promocode_name
        in: query
        name: promocode_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Total Sum Order
      tags:
      - Report
  /staff:
    get:
      consumes:
      - application/json
      description: Get List Staff
      operationId: get_list_staff
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Staff
      tags:
      - Staff
    post:
      consumes:
      - application/json
      description: Create Staff
      operationId: create_staff
      parameters:
      - description: CreateStaffRequest
        in: body
        name: Staff
        required: true
        schema:
          $ref: '#/definitions/models.CreateStaff'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Staff
      tags:
      - Staff
  /staff/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Staff
      operationId: delete_staff
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteStaffRequest
        in: body
        name: Staff
        required: true
        schema:
          $ref: '#/definitions/models.StaffPrimaryKey'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Staff
      tags:
      - Staff
    get:
      consumes:
      - application/json
      description: Get By ID Staff
      operationId: get_by_id_staff
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Staff
      tags:
      - Staff
    put:
      consumes:
      - application/json
      description: Update Staff
      operationId: update_staff
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateStaffRequest
        in: body
        name: Staff
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStaff'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Staff
      tags:
      - Staff
  /stock:
    get:
      consumes:
      - application/json
      description: Get List Stock
      operationId: get_list_stock
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Stock
      tags:
      - Stock
    post:
      consumes:
      - application/json
      description: Create Stock
      operationId: create_stock
      parameters:
      - description: CreateStockRequest
        in: body
        name: stock
        required: true
        schema:
          $ref: '#/definitions/models.CreateStock'
      produces:
      - application/json
      responses:
        "201":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Stock
      tags:
      - Stock
    put:
      consumes:
      - application/json
      description: Update Stock
      operationId: update_stock
      parameters:
      - description: storeId
        in: query
        name: storeId
        required: true
        type: string
      - description: productId
        in: query
        name: productId
        required: true
        type: string
      - description: UpdateStockRequest
        in: body
        name: Stock
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStock'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Stock
      tags:
      - Stock
  /stock/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Stock
      operationId: delete_stock
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteStockRequest
        in: body
        name: stock
        required: true
        schema:
          $ref: '#/definitions/models.StockPrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Stock
      tags:
      - Stock
    get:
      consumes:
      - application/json
      description: Get By ID Stock
      operationId: get_by_id_stock
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Stock
      tags:
      - Stock
  /store:
    get:
      consumes:
      - application/json
      description: Get List Store
      operationId: get_list_store
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get List Store
      tags:
      - Store
    post:
      consumes:
      - application/json
      description: Create Store
      operationId: create_store
      parameters:
      - description: CreateStoreRequest
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/models.CreateStore'
      produces:
      - application/json
      responses:
        "201":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Store
      tags:
      - Store
  /store/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Store
      operationId: delete_store
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: DeleteStoreRequest
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/models.StorePrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Store
      tags:
      - Store
    get:
      consumes:
      - application/json
      description: Get By ID Store
      operationId: get_by_id_store
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get By ID Store
      tags:
      - Store
    put:
      consumes:
      - application/json
      description: Update Store
      operationId: update_store
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: UpdateStoreRequest
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStore'
      produces:
      - application/json
      responses:
        "202":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Store
      tags:
      - Store
swagger: "2.0"
